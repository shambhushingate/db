// 1. Create company database
use company

// 2. Create employee collection
db.createCollection("employee")

// 3. Insert at least 10 employee information in employee collection
db.employee.insertMany([
    { eid: 1, ename: "Amruta", designation: "Analyst", hiredate: new Date("2015-06-15"), salary: 12000, hobbies: ["reading", "painting"], department: "Sales" },
    { eid: 2, ename: "Sujit", designation: "Salesman", hiredate: new Date("2015-07-22"), salary: 9500, hobbies: ["cricket", "reading"], department: "Sales" },
    { eid: 3, ename: "Akash", designation: "Manager", hiredate: new Date("2016-01-15"), salary: 20000, hobbies: ["music", "painting"], department: "HR" },
    { eid: 4, ename: "Shubhangi", designation: "Clerk", hiredate: new Date("2015-08-01"), salary: 8000, hobbies: ["traveling", "music"], department: "Production" },
    { eid: 5, ename: "Pravin", designation: "Salesman", hiredate: new Date("2015-09-10"), salary: 11000, hobbies: ["cricket", "painting"], department: "Sales" },
    { eid: 6, ename: "Vandana", designation: "Analyst", hiredate: new Date("2015-10-25"), salary: 13000, hobbies: ["reading", "traveling"], department: "Marketing" },
    { eid: 7, ename: "Pushpa", designation: "Manager", hiredate: new Date("2014-03-30"), salary: 18000, hobbies: ["music", "reading"], department: "Production" },
    { eid: 8, ename: "Raghav", designation: "Clerk", hiredate: new Date("2015-11-15"), salary: 7500, hobbies: ["painting", "cricket"], department: "HR" },
    { eid: 9, ename: "Snehal", designation: "Salesman", hiredate: new Date("2015-12-01"), salary: 10000, hobbies: ["music", "painting"], department: "Sales" },
    { eid: 10, ename: "Bhakti", designation: "Analyst", hiredate: new Date("2016-02-01"), salary: 12500, hobbies: ["reading", "music"], department: "Marketing" }
])

// a) List the names of analysts and salesmen
db.employee.find({ designation: { $in: ["Analyst", "Salesman"] } }, { ename: 1, _id: 0 });

// b) List the eid,ename and salary from employee collection
db.employee.find({}, { eid: 1, ename: 1, salary: 1, _id: 0 });

// c) List names of employees who are not managers
db.employee.find({ designation: { $ne: "Manager" } }, { ename: 1, _id: 0 });

// d) List the names of employees whose employee numbers are 1,3,7,9
db.employee.find({ eid: { $in: [1, 3, 7, 9] } }, { ename: 1, _id: 0 });

// e) List the names of all employees those having reading as a second hobby
db.employee.find({ hobbies: { $size: 2, $eq: "reading" } }, { ename: 1, _id: 0 });

// f) List employee names for those who have joined between 30 June and 31 Dec 2015
db.employee.find({ hiredate: { $gte: new Date("2015-06-30"), $lte: new Date("2015-12-31") } }, { ename: 1, _id: 0 });

// g) List the different designations in the company
db.employee.distinct("designation");

// h) List the eid,ename,salary of all employees whose salary is less than 10000
db.employee.find({ salary: { $lt: 10000 } }, { eid: 1, ename: 1, salary: 1, _id: 0 });

// i) List the name and designation of the employee who works in production department
db.employee.find({ department: "Production" }, { ename: 1, designation: 1, _id: 0 });

// j) List all employees whose name starts with "A"
db.employee.find({ ename: /^A/ }, { ename: 1, _id: 0 });

// k) List all employees whose name contains "sh" string
db.employee.find({ ename: /sh/ }, { ename: 1, _id: 0 });

// l) List all employees whose names either start or end with “S”
db.employee.find({ $or: [{ ename: /^S/ }, { ename: /S$/ }] }, { ename: 1, _id: 0 });

// m) List the names of employees whose department is not HR
db.employee.find({ department: { $ne: "HR" } }, { ename: 1, _id: 0 });

// n) List the number of employees working in sales department
db.employee.countDocuments({ department: "Sales" });

// o) List the number of designations available in the EMP collections
db.employee.distinct("designation").length;

// p) List the eid,ename,salary of all employees whose salary is between 10000 to 20000
db.employee.find({ salary: { $gte: 10000, $lte: 20000 } }, { eid: 1, ename: 1, salary: 1, _id: 0 });

// q) List the eid,ename of all employees whose salary is greater than or equal to 15000
db.employee.find({ salary: { $gte: 15000 } }, { eid: 1, ename: 1, _id: 0 });

// r) List details of employees whose department is Sales and salary is 10000
db.employee.find({ department: "Sales", salary: 10000 });

// s) List the names of employees those having reading and painting hobbies
db.employee.find({ hobbies: { $all: ["reading", "painting"] } }, { ename: 1, _id: 0 });

// t) List the first hobby of all employees from the employee collection
db.employee.find({}, { "hobbies.0": 1, _id: 0 });

// u) List the names of all employees those having three different hobbies
db.employee.find({ hobbies: { $size: 3 } }, { ename: 1, _id: 0 });

// 1. Update the Salary of a Specific Employee
db.employee.updateOne(
    { eid: 1 },
    { $set: { salary: 13000 } }
);

// 2. Increase Salary for All Sales Department Employees
db.employee.updateMany(
    { department: "Sales" },
    { $mul: { salary: 1.10 } }
);

// 3. Add a New Field for "Experience"
db.employee.updateMany(
    { hiredate: { $lt: new Date("2016-01-01") } },
    { $set: { experience: "Senior" } }
);

// 4. Replace an Employee Document
db.employee.replaceOne(
    { eid: 4 },
    {
        eid: 4,
        ename: "Shubhangi",
        designation: "Assistant Manager",
        hiredate: new Date("2015-08-01"),
        salary: 9000,
        hobbies: ["traveling", "music", "sports"],
        department: "Production"
    }
);

// 5. Add a New Hobby to an Employee
db.employee.updateOne(
    { eid: 3 },
    { $push: { hobbies: "sketching" } }
);

// 6. Remove a Hobby from Multiple Employees
db.employee.updateMany(
    { hobbies: "cricket" },
    { $pull: { hobbies: "cricket" } }
);

// 7. Conditional Upsert to Add New Employee
db.employee.updateOne(
    { eid: 11 },
    {
        $setOnInsert: {
            ename: "Nikhil",
            designation: "Salesman",
            hiredate: new Date("2022-01-01"),
            salary: 9000,
            hobbies: ["reading", "gaming"],
            department: "Sales"
        }
    },
    { upsert: true }
);

// 8. Update All Managers’ Designations to "Senior Manager"
db.employee.updateMany(
    { designation: "Manager" },
    { $set: { designation: "Senior Manager" } }
);

// 9. Find and Update (Returning Updated Document)
db.employee.findOneAndUpdate(
    { eid: 7 },
    { $set: { salary: 20000 } },
    { returnDocument: "after" }
);

// 10. Add Unique Hobby to All Analysts’ Hobbies
db.employee.updateMany(
    { designation: "Analyst" },
    { $addToSet: { hobbies: "coding" } }
);

// 1. Delete a Specific Employee
db.employee.deleteOne(
    { eid: 10 }
);

// 2. Delete All Employees in a Specific Department
db.employee.deleteMany(
    { department: "HR" }
);

// 3. Delete Employees with Salary Less Than 8000
db.employee.deleteMany(
    { salary: { $lt: 8000 } }
);

// 4. Delete Employees with No Hobbies
db.employee.deleteMany(
    { hobbies: { $exists: false } }
);

// 5. Remove All Hobbies from Specific Employee
db.employee.updateOne(
    { eid: 2 },
    { $unset: { hobbies: "" } }
);
